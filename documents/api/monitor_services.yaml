Resource:
  get:
    summary: 서비스 목록 조회
    description: 현재 동작중인 CDM 서비스의 목록을 조회한다. 각 서비스의 정보와 상태를 반환한다.
    operationId: cdm.cloud.monitor.services
    externalDocs:
      url: http://10.1.1.220/cdm/cdm-cloud/documents/-/blob/master/functions.md#fc-cl-05011
    tags:
      - monitor
    responses:
      200:
        $ref: '#/components/responses/Services'
      204:
        description: No Contents
      401:
        description: Unauthenticated
      403:
        description: Unauthorized
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

Object:
  get:
    summary: 서비스 상세 조회 (WebSocket 프로토콜 지원)
    description: 현재 동작중인 CDM 서비스의 상세 정보를 조회한다. 해당 서비스의 정보와 상태, 그리고 replicas 정보를 반환한다.
    operationId: cdm.cloud.monitor.service
    externalDocs:
      url: http://10.1.1.220/cdm/cdm-cloud/documents/-/blob/master/functions.md#fc-cl-05021
    tags:
      - monitor
    parameters:
      - $ref: '#/components/parameters/Interval'
      - $ref: '#/components/parameters/ServiceName'
    responses:
      200:
        $ref: '#/components/responses/Service'
      400:
        description: Bad Request
      401:
        description: Unauthenticated
      403:
        description: Unauthorized
      404:
        description: Not Found
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

Logs:
  get:
    summary: 서비스 로그 조회
    description: 현재 동작중인 서비스의 특정 날짜 로그 내용을 조회한다. 해당 서비스의 로그 내용을 반환한다.
    operationId: cdm.cloud.monitor.service.log
    externalDocs:
      url: http://10.1.1.220/cdm/cdm-cloud/documents/-/blob/master/functions.md#fc-cl-05031
    tags:
      - monitor
    parameters:
      - $ref: '#/components/parameters/ServiceName'
      - $ref: '#/components/parameters/ServiceLogDate'
    responses:
      200:
        $ref: '#/components/responses/ServiceLog'
      204:
        description: No Contents
      401:
        description: Unauthenticated
      403:
        description: Unauthorized
      404:
        description: Not Found
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

components:
  parameters:
    ServiceName:
      in: path
      name: service_name
      description: 서비스의 이름
      required: true
      schema:
        type: string

    ServiceLogDate:
      in: path
      name: log_date
      description: 서비스 로그 날짜 (YYYYMMDD)
      required: true
      schema:
        type: string

    Interval:
      in: query
      name: interval
      description: WebSocket 프로토콜을 사용할 때의 데이터 수신 간격 (sec)
      schema:
        type: integer
        format: int32
        minimum: 2
        maximum: 30
        default: 5

  responses:
    Services:
      content:
        application/json:
          schema:
            type: object
            properties:
              services:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
              message:
                $ref: 'schemas.yaml#/Message'
          example: {
            services: [
              {
                name: "cdm-cloud-identity",
                solution: "CDM-Cloud",
                description: "Identity Service",
                version: "unknown",
                status: {
                  resource_usage: {mem_used_bytes: 427933696, network_receive_bytes: 123456, network_transmit_bytes: 1234}
                }
              },
              {
                name: "cdm-cloud-api-gateway",
                solution: "CDM-Cloud",
                description: "API Gateway",
                version: "unknown",
                status: {
                  resource_usage: {mem_used_bytes: 427933696, network_receive_bytes: 123456, network_transmit_bytes: 1234}
                }
              }
            ],
            message: {
              code: "message code",
              contents: "message contents"
            }
          }

    Service:
      content:
        application/json:
          schema:
            type: object
            properties:
              service:
                $ref: '#/components/schemas/Service'
          example: {
            service: {
              name: "cdm-cloud-identity",
              solution: "CDM-Cloud",
              description: "Identity Service",
              version: "unknown",
              status: {
                resource_usage: { mem_used_bytes: 427933696, network_receive_bytes: 123456, network_transmit_bytes: 1234 },
              },
              replicas: [
                {
                  id: "yb0hjemhzudlpvca6sp5zr1qy",
                  node: {id: "z4e4x4lqzlf4q9tvnnm44mucy", name: "node-01"},
                  status: {
                    resource_usage: { mem_used_bytes: 427933696, network_receive_bytes: 123456, network_transmit_bytes: 1234 },
                  }
                },
                {
                  id: "l2zm3tvyuforbe8ijbnarpjfp",
                  node: {id: "trs3pmbofq0cxjjge9xkbvn1b", name: "node-02"},
                  status: {
                    resource_usage: { mem_used_bytes: 427933696, network_receive_bytes: 123456, network_transmit_bytes: 1234 },
                  }
                }
              ]
            }
          }

    ServiceLog:
      desciption: 서비스의 로그를 반환한다.
      content:
        application/json:
          schema:
            type: object
            properties:
              log:
                $ref: '#/components/schemas/ServiceLog'
              message:
                $ref: 'schemas.yaml#/Message'
          example: {
            log: "로그 내용",
            message: {
              code: "message code",
              contents: "message contents"
            }
          }

  schemas:
    ServiceLog:
      description: 서비스 로그
      type: string

    Service:
      description: 서비스의 정보
      allOf:
        - $ref: 'schemas.yaml#/Service'
      properties:
        status:
          $ref: 'schemas.yaml#/ServiceStatus'
        replicas:
          type: array
          items:
            $ref: 'schemas.yaml#/ServiceReplica'