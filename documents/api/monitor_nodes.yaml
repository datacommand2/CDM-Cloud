Resource:
  get:
    summary: 노드 목록 조회
    description: CDM-Cloud가 전개된 노드 목록을 조회한다. 각 노드의 정보와 상태를 반환한다.
    operationId: cdm.cloud.monitor.nodes
    externalDocs:
      url: http://10.1.1.220/cdm/cdm-cloud/documents/-/blob/master/functions.md#fc-cl-04011
    tags:
      - monitor
    responses:
      200:
        $ref: '#/components/responses/Nodes'
      401:
        description: Unauthenticated
      403:
        description: Unauthorized
      404:
        description: Not Found
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

Object:
  get:
    summary: 노드 상세 조회 (WebSocket 프로토콜 지원)
    description: CDM-Cloud가 전개된 노드의 상세 정보를 조회한다. 해당 노드의 정보와 상태, 그리고 실행중인 서비스를 반환힌다.
    operationId: cdm.cloud.monitor.node
    externalDocs:
      url: http://10.1.1.220/cdm/cdm-cloud/documents/-/blob/master/functions.md#fc-cl-04021
    tags:
      - monitor
    parameters:
      - $ref: '#/components/parameters/Interval'
      - $ref: '#/components/parameters/NodeID'
    responses:
      200:
        $ref: '#/components/responses/Node'
      400:
        description: Bad Request
      401:
        description: Unauthenticated
      403:
        description: Unauthorized
      404:
        description: Not Found
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

Services:
  get:
    summary: 노드 서비스 목록 조회 (WebSocket 프로토콜 지원)
    description: CDM-Cloud가 전개된 노드의 현재 동작중인 CDM 서비스의 목록을 조회한다. 각 서비스의 정보와 상태를 반환한다. 이 때 특정 노드에 같은 서비스가 여러 개 실행중인 경우 하나로 통합하여 보여준다.
    operationId: cdm.cloud.monitor.node.services
    externalDocs:
      url: http://10.1.1.220/cdm/cdm-cloud/documents/-/blob/master/functions.md#fc-cl-04031
    tags:
      - monitor
    parameters:
      - $ref: '#/components/parameters/Interval'
      - $ref: '#/components/parameters/NodeID'
    responses:
      200:
        $ref: '#/components/responses/Services'
      204:
        description: No Contents
      400:
        description: Bad Request
      401:
        description: Unauthenticated
      403:
        description: Unauthorized
      500:
        description: Internal Server Error
      501:
        description: Not Implemented
      503:
        description: Service Unavailable

components:
  parameters:
    NodeID:
      in: path
      name: node_id
      description: 노드의 ID
      required: true
      schema:
        type: string

    Interval:
      in: query
      name: interval
      description: WebSocket 프로토콜을 사용할 때의 데이터 수신 간격 (sec)
      schema:
        type: integer
        format: int32
        minimum: 2
        maximum: 30
        default: 5


  responses:
    Nodes:
      content:
        application/json:
          schema:
            type: object
            properties:
              nodes:
                type: array
                items:
                  $ref: '#/components/schemas/Node'
              message:
                $ref: 'schemas.yaml#/Message'
          example: {
            nodes: [
              {
                id: "z4e4x4lqzlf4q9tvnnm44mucy", name: "node-01",
                status: {
                  resource_usage: {
                    cpu_core_cnt: 4, cpu_used_rate: 12.34,
                    mem_total_bytes: 3973107712, mem_used_bytes: 427933696
                  }
                }
              },
              {
                id: "trs3pmbofq0cxjjge9xkbvn1b", name: "node-02",
                status: {
                  resource_usage: {
                    cpu_core_cnt: 4, cpu_used_rate: 12.34,
                    mem_total_bytes: 3973107712, mem_used_bytes: 427933696
                  }
                }
              },
              {
                id: "nm3f8kwowb41bouqt1g2mpd1c", name: "node-03",
                status: {
                  resource_usage: {
                    cpu_core_cnt: 4, cpu_used_rate: 12.34,
                    mem_total_bytes: 3973107712, mem_used_bytes: 427933696
                  }
                }
              }
            ],
            message: {
              code: "message code",
              contents: "message contents"
            }
          }

    Node:
      content:
        application/json:
          schema:
            type: object
            properties:
              node:
                $ref: '#/components/schemas/Node'
          example: {
            node: {
              id: "z4e4x4lqzlf4q9tvnnm44mucy", name: "node-01",
              status: {
                resource_usage: {
                  cpu_core_cnt: 4, cpu_used_rate: 12.34,
                  mem_total_bytes: 3973107712, mem_used_bytes: 427933696,
                  network_receive_bytes: 123456, network_transmit_bytes: 1234,
                  filesystem_size_bytes: 4398000000000, filesystem_used_bytes: 1234560000
                }
              }
            }
          }

    Services:
      content:
        application/json:
          schema:
            type: object
            properties:
              services:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
          example: {
            services: [
              {
                name: "cdm-cloud-identity",
                solution: "CDM-Cloud",
                description: "Identity Service",
                version: "unknown",
                status: {
                  resource_usage: {mem_used_bytes: 427933696, network_receive_bytes: 123456, network_transmit_bytes: 1234}
                }
              },
              {
                name: "cdm-cloud-api-gateway",
                solution: "CDM-Cloud",
                description: "API Gateway",
                version: "unknown",
                status: {
                  resource_usage: {mem_used_bytes: 427933696, network_receive_bytes: 123456, network_transmit_bytes: 1234}
                }
              }
            ]
          }

  schemas:
    Node:
      description: 노드의 상태
      allOf:
        - $ref: 'schemas.yaml#/Node'
      properties:
        status:
          $ref: 'schemas.yaml#/NodeStatus'

    Service:
      description: 서비스의 정보를 반환한다.
      allOf:
        - $ref: 'schemas.yaml#/Service'
      properties:
        status:
          $ref: 'schemas.yaml#/ServiceStatus'